version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: real-time-sensor-logger-streaming-zookeeper-1
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_MESSAGE_MAX_BYTES: 2000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 2250000
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 1200000000
      KAFKA_HEAP_OPTS: "-Xmx4G -Xms4G" 
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 5

  flask-producer:
    build: .
    container_name: real-time-sensor-logger-streaming-flask-producer-1
    ports:
      - "5000:5000"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: real-time-sensor-logger-streaming-kafka-1:9092
    depends_on:
      - kafka
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
